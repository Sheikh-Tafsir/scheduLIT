{"ast":null,"code":"import _slicedToArray from \"F:\\\\New folder (2)\\\\scheduLIT\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\New folder (2)\\\\scheduLIT\\\\client\\\\src\\\\Calender.js\";\n\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nvar calender = function calender() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      onChange = _useState2[1]; // State for date selected by user\n\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedDate = _useState4[0],\n      setSelectedDate = _useState4[1]; // State for text above calander\n\n\n  var _useState5 = useState(\"No Date is selected\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      calendarText = _useState6[0],\n      setCalendarText = _useState6[1];\n\n  var handleDateChange = function handleDateChange(value) {\n    setSelectedDate(value);\n    setCalendarText(\"The selected Date is \".concat(value.toDateString()));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"onChange=\", handleDateChange);\n};\n\nexport default calender;","map":{"version":3,"names":["React","useState","Calendar","calender","Date","value","onChange","selectedDate","setSelectedDate","calendarText","setCalendarText","handleDateChange","toDateString"],"sources":["F:/New folder (2)/scheduLIT/client/src/Calender.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst calender = () => {\r\n    const [value, onChange] = useState(new Date());\r\n    // State for date selected by user\r\n    const [selectedDate, setSelectedDate] = useState();\r\n\r\n    // State for text above calander\r\n    const [calendarText, setCalendarText] = useState(`No Date is selected`);\r\n    const handleDateChange = (value) => {\r\n        setSelectedDate(value);\r\n        setCalendarText(`The selected Date is ${value.toDateString()}`);\r\n      };\r\n  return (\r\n    <div className=\"calender\">\r\n        {/*<Calendar onChange={onChange} value={value} />*/}\r\n        onChange={handleDateChange}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default calender"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EAAA,gBACOF,QAAQ,CAAC,IAAIG,IAAJ,EAAD,CADf;EAAA;EAAA,IACZC,KADY;EAAA,IACLC,QADK,kBAEnB;;;EAFmB,iBAGqBL,QAAQ,EAH7B;EAAA;EAAA,IAGZM,YAHY;EAAA,IAGEC,eAHF,kBAKnB;;;EALmB,iBAMqBP,QAAQ,uBAN7B;EAAA;EAAA,IAMZQ,YANY;EAAA,IAMEC,eANF;;EAOnB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACN,KAAD,EAAW;IAChCG,eAAe,CAACH,KAAD,CAAf;IACAK,eAAe,gCAAyBL,KAAK,CAACO,YAAN,EAAzB,EAAf;EACD,CAHH;;EAIF,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEcD,gBAFd,CADF;AAMD,CAjBD;;AAmBA,eAAeR,QAAf"},"metadata":{},"sourceType":"module"}